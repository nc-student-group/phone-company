#############################################################################
############################## Address entity ###############################
#############################################################################
query.address.save=INSERT INTO address(region_id, locality, street, house_number, apartment_number) VALUES (?, ?, ?, ?, ?) RETURNING id;
query.address.update=UPDATE address SET region_id = ?, locality = ?, street = ?, house_number = ?, apartment_number = ? WHERE id = ?;
query.address.getById=SELECT id, region_id, locality, street, house_number, apartment_number FROM address WHERE id = ?;
query.address.getAll=SELECT id, region_id, locality, street, house_number, apartment_number FROM address;
#############################################################################
############################## Complaint entity #############################
#############################################################################
query.complaint.save=INSERT INTO complaint(status, orderDate, text, type, user_id) VALUES (?, ?, ?, ?, ?) RETURNING id;
query.complaint.update=UPDATE complaint SET status = ?, orderDate = ?, text = ?, type = ?, user_id = ? WHERE id = ?;
query.complaint.getById=SELECT id, status, orderDate, text, type, user_id FROM complaint WHERE id = ?;
query.complaint.getAll=SELECT id, status, orderDate, text, type, user_id FROM complaint;
#############################################################################
############################## Corporate entity #############################
#############################################################################
query.corporate.save=INSERT INTO corporate(corporate_name) VALUES (?) RETURNING id;
query.corporate.update=UPDATE corporate SET corporate_name = ? WHERE id = ?;
query.corporate.getById=SELECT id, corporate_name FROM corporate WHERE id = ?;
query.corporate.getAll=SELECT id, corporate_name FROM corporate;
#############################################################################
############################## Customer service entity ######################
#############################################################################
query.customer_service.save=INSERT INTO customer_service(customer_id, service_id, order_date, price, order_status) VALUES (?, ?, ?, ?, ?) RETURNING id;
query.customer_service.update=UPDATE customer_service SET customer_id = ?, service_id = ?, order_date = ?, price = ?, order_status = ? WHERE id = ?;
query.customer_service.getById=SELECT id, customer_id, service_id, order_date, price, order_status FROM customer_service WHERE id = ?;
query.customer_service.getAll=SELECT id, customer_id, service_id, order_date, price, order_status FROM customer_service;
#############################################################################
############################## Customer tariff entity ######################
#############################################################################
query.customer_tariff.save=INSERT INTO customer_tariff(customer_id, corporate_id, order_date, total_price, order_status,tariff_id) VALUES (?, ?, ?, ?, ?, ?) RETURNING id;
query.customer_tariff.update=UPDATE customer_tariff SET customer_id = ?, corporate_id = ?, order_date = ?, total_price = ?, order_status = ?,tariff_id=? WHERE id = ?;
query.customer_tariff.getById=SELECT id, customer_id, corporate_id, order_date, total_price, order_status,tariff_id FROM customer_tariff WHERE id = ?;
query.customer_tariff.getAll=SELECT id, customer_id, corporate_id, order_date, total_price, order_status,tariff_id FROM customer_tariff;
#############################################################################
############################## User entity ##################################
#############################################################################
query.user.save=\
  INSERT INTO dbuser(email, password, role_id, status) \
  VALUES (?, ?, ?, ?) RETURNING id;
query.user.getById=\
  SELECT id, email, password, role_id, status \
  FROM dbuser WHERE id = ?;
query.user.update=\
  UPDATE dbuser \
  SET email = ?, password = ?, role_id = ?, status = ? \
  WHERE id = ?;
query.user.getByEmail=\
  SELECT id, email, password, role_id, status \
  FROM dbuser \
  WHERE email = ?
query.user.getAll=SELECT id, email, password, role_id, status \
   FROM dbuser;
#############################################################################
############################ Customer entity ################################
#############################################################################
query.customer.save=\
  INSERT INTO dbuser(email, password, role_id,firstname,secondname,lastname,phone,address_id,corporate_id,is_representative, status) \
  VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id;
query.customer.getById=\
  SELECT email, password, role_id,firstname,secondname,lastname,phone,address_id,corporate_id,is_representative, status \
  FROM dbuser WHERE id = ?;
query.customer.by.verification.token=\
  SELECT u.id, email, password, role_id, firstname, secondname, lastname, \
  phone, address_id, corporate_id, is_representative, status \
  FROM dbuser u INNER JOIN verification_token vt \
  ON u.id = vt.user_id \
  WHERE token = ?
query.customer.update=\
  UPDATE dbuser \
  SET email = ?, password = ?, role_id = ?, firstname = ?,secondname = ?,lastname = ?,phone = ?,address_id = ?,corporate_id = ?,is_representative = ?, status = ? \
  WHERE id = ?;
query.customer.getByEmail=\
  SELECT id, password, role_id,firstname,secondname,lastname,phone,address_id,corporate_id,is_representative, status \
  FROM dbuser \
  WHERE email = ?
query.customer.getAll=SELECT id, password, role_id,firstname,secondname,lastname,phone,address_id,corporate_id,is_representative, status \
   FROM dbuser;
#############################################################################
############################## Product category entity ######################
#############################################################################
query.product_category.save=INSERT INTO product_category(name_category, units) VALUES (?, ?) RETURNING id;
query.product_category.update=UPDATE product_category SET name_category = ?, units = ? WHERE id = ?;
query.product_category.getById=SELECT id, name_category, units FROM product_category WHERE id = ?;
query.product_category.getAll=SELECT id, name_category, units FROM product_category;
#############################################################################
############################## Region entity ######################
#############################################################################
query.region.save=INSERT INTO region(name_region) VALUES (?) RETURNING id;
query.region.update=UPDATE region SET name_region = ? WHERE id = ?;
query.region.getById=SELECT id, name_region FROM region WHERE id = ?;
query.region.getAll=SELECT id, name_region FROM region;
#############################################################################
############################## Role entity ######################
#############################################################################
query.role.save=INSERT INTO role(name) VALUES (?) RETURNING id;
query.role.update=UPDATE role SET name = ? WHERE id = ?;
query.role.getById=SELECT id, name FROM role WHERE id = ?;
query.role.getAll=SELECT id, name FROM role;
#############################################################################
############################## Service  entity ######################
#############################################################################
query.service.save=INSERT INTO service(prod_category_id, service_name, price, product_status, discount) VALUES (?, ?, ?, ?, ?) RETURNING id;
query.service.update=UPDATE service SET prod_category_id = ?, service_name = ?, price = ?, product_status = ?, discount =? WHERE id = ?;
query.service.getById=SELECT id, prod_category_id, service_name, price, product_status, discount FROM service WHERE id = ?;
query.service.getAll=SELECT id, prod_category_id, service_name, price, product_status, discount FROM service;
#############################################################################
############################## Tariff  entity ######################
#############################################################################
query.tariff.save=INSERT INTO tariff(tariff_name, product_status, internet, calls_in_network, calls_om_other_numbers, sms, mms, roaming) VALUES (?, ?, ?, ?, ?, ?, ?, ?) RETURNING id;
query.tariff.update=UPDATE tariff SET tariff_name = ?, product_status = ?, internet = ?, calls_in_network = ?, calls_om_other_numbers = ?, sms = ?, mms =?, roaming = ? WHERE id = ?;
query.tariff.getById=SELECT id, tariff_name, product_status, internet, calls_in_network, calls_om_other_numbers, sms, mms, roaming FROM tariff WHERE id = ?;
query.tariff.getAll=SELECT id, tariff_name, product_status, internet, calls_in_network, calls_om_other_numbers, sms, mms, roaming FROM tariff;
#############################################################################
####################### Tariff region entity ###########################
#############################################################################
query.tariff_region.save=\
  INSERT INTO tariff_region(region_id, tariff_id, price) \
  VALUES (?, ?, ?) RETURNING id;
query.tariff_region.update=UPDATE tariff_region SET region_id = ?, tariff_id = ?, price = ? WHERE id = ?;
query.tariff_region.getById=SELECT id, region_id, tariff_id, price FROM tariff_region WHERE id = ?;
query.tariff_region.getAll=SELECT id, region_id, tariff_id, price FROM tariff_region;
#############################################################################
####################### Verification token entity ###########################
#############################################################################
query.verification_token.save=\
  INSERT INTO verification_token(user_id, token, expiry_date) \
  VALUES (?, ?, ?) RETURNING id;
query.verification_token.update=UPDATE verification_token SET user_id = ?, token = ?, expiry_date = ? WHERE id = ?;
query.verification_token.getById=SELECT id, user_id, token, expiry_date FROM verification_token WHERE id = ?;
query.verification_token.getAll=SELECT id, user_id, token, expiry_date FROM verification_token;